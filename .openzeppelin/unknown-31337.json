{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x707531c9999AaeF9232C8FEfBA31FBa4cB78d84a",
    "txHash": "0xb535bf0b5f4494864afc17f7a93b450c4f23a6721fa89863035e24d7ce57ef65"
  },
  "proxies": [
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xa6dc356d3a6ed0c3d43920e034b0096473ae2948e5fe202ab25a7cf8483efb29",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xcb9e501c2c481d792d9801cfeaccf604943ba3ba4c3709cab563ae0c90663db9",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xfc47b7478b4382484fa673a20fbb6b315d725b31f72bca6d72d128b022a26e0d",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x3e86453a252e968611c8559979791fb0876f6d24670cdcc92d2e0c8ff6659a02",
      "kind": "transparent"
    },
    {
      "address": "0x107878621f99d7918cb1A86602CaB715E8B2d386",
      "txHash": "0xa42b289b250b2a610e538db0def13f06321e89b66fb27615f75d1a1c2dbbaa14",
      "kind": "transparent"
    },
    {
      "address": "0xa54C848fF17DE43816e63cE639540E4a0cb244ba",
      "txHash": "0xb719962f2b472c8fa512eec0264e1bec0405900c82663f0f386c9e5d63e65ad1",
      "kind": "transparent"
    },
    {
      "address": "0x774372fB7c8D6e484dbc7AE9c0f7771F070C30Db",
      "txHash": "0x9785ae8edc0c14f16ab6d43af2079f95d3921793b1558b78e5417aa566f42b46",
      "kind": "transparent"
    },
    {
      "address": "0x9B47985963fC82D8DEa6D824d1FbbFf3be5ca647",
      "txHash": "0x54a4a531081e9cef2cdb283a4d30a199969069ece3802515aa065d2c24f11477",
      "kind": "transparent"
    },
    {
      "address": "0xb27A9f32de9DA255bb87AEb9fe934a3Acbdea3D6",
      "txHash": "0xd3c67d5b2e274e5624e7e11e686466fad90ee78476e0bb6f34da88f026151ad1",
      "kind": "transparent"
    },
    {
      "address": "0x8DEf6bFE85c90B4412932e060A893ba864B031F7",
      "txHash": "0x8a1c05aac2d259c9f97aa927f4aaefcf3b7eba6423648b65a5146d6b69f622e7",
      "kind": "transparent"
    },
    {
      "address": "0x984E915350aDA8b4558bef8a517b8FDcaec556c7",
      "txHash": "0x2b20d4ece0bc272b8ac5dbb731a79fc296161ff7a44fc1d7bd49e57e331bffeb",
      "kind": "transparent"
    },
    {
      "address": "0xF66CfDf074D2FFD6A4037be3A669Ed04380Aef2B",
      "txHash": "0x5a6001f4c3aaa4b77ec16fa8464ff1fa618b2add98188ea1f40e9ee895f037f7",
      "kind": "transparent"
    },
    {
      "address": "0xFC4EE541377F3b6641c23CBE82F6f04388290421",
      "txHash": "0x0736c205c5cf4606853a299b2e73ae929e00e82d2f8dd19fdb1f09fe553986cc",
      "kind": "transparent"
    },
    {
      "address": "0x2538a10b7fFb1B78c890c870FC152b10be121f04",
      "txHash": "0x52b6ae5742698fc7bf6694ee0f79654a6e313a8287599faaac35bff179e36edc",
      "kind": "transparent"
    },
    {
      "address": "0xdB05A386810c809aD5a77422eb189D36c7f24402",
      "txHash": "0xbfdda828f7727009f82f4906ba4afcf93c73a110a657e5ab7007e2bacf7ed5ae",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6dae749ac63ef59134022a58d1e5b6847f4643f59786b4ca40638197790cfaa7": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x7e332e95770eed2fe128541ca9f4276039dc4c9b05c89f1db0af0793bf0ae3c8",
      "layout": {
        "solcVersion": "0.8.14",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:11"
          },
          {
            "label": "currency",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:14"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IPoolFactory)10112",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:17"
          },
          {
            "label": "interestRateModel",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IInterestRateModel)10026",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:20"
          },
          {
            "label": "reserveFactor",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:23"
          },
          {
            "label": "insuranceFactor",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:26"
          },
          {
            "label": "warningUtilization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:29"
          },
          {
            "label": "provisionalDefaultUtilization",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:32"
          },
          {
            "label": "warningGracePeriod",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:35"
          },
          {
            "label": "maxInactivePeriod",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:38"
          },
          {
            "label": "periodToStartAuction",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:41"
          },
          {
            "label": "debtClaimed",
            "offset": 0,
            "slot": "112",
            "type": "t_bool",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:52"
          },
          {
            "label": "_info",
            "offset": 0,
            "slot": "113",
            "type": "t_struct(BorrowInfo)13292_storage",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:67"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "121",
            "type": "t_string_storage",
            "contract": "PoolBaseInfo",
            "src": "contracts/mocks/clearpool/PoolBaseInfo.sol:70"
          },
          {
            "label": "rewardPerSecond",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "PoolRewards",
            "src": "contracts/mocks/clearpool/PoolRewards.sol:16"
          },
          {
            "label": "_lastRewardDistribution",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "PoolRewards",
            "src": "contracts/mocks/clearpool/PoolRewards.sol:22"
          },
          {
            "label": "_magnifiedRewardPerShare",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "PoolRewards",
            "src": "contracts/mocks/clearpool/PoolRewards.sol:25"
          },
          {
            "label": "_magnifiedRewardCorrections",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_address,t_int256)",
            "contract": "PoolRewards",
            "src": "contracts/mocks/clearpool/PoolRewards.sol:28"
          },
          {
            "label": "_withdrawals",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolRewards",
            "src": "contracts/mocks/clearpool/PoolRewards.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IInterestRateModel)10026": {
            "label": "contract IInterestRateModel",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolFactory)10112": {
            "label": "contract IPoolFactory",
            "numberOfBytes": "20"
          },
          "t_enum(State)13271": {
            "label": "enum PoolBaseInfo.State",
            "members": [
              "Active",
              "Warning",
              "ProvisionalDefault",
              "Default",
              "Closed"
            ],
            "numberOfBytes": "1"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowInfo)13292_storage": {
            "label": "struct PoolBaseInfo.BorrowInfo",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "borrows",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "reserves",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "insurance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastAccrual",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "enteredProvisionalDefault",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "enteredZeroUtilization",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "state",
                "type": "t_enum(State)13271",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a9868e74e4e9eff4e694a123b62a8fce1699def5772dcd7244b2d860e4f28547": {
      "address": "0x24432a08869578aAf4d1eadA12e1e78f171b1a2b",
      "txHash": "0x4cdd37efc749ea124b74b5c9a27be2ac29a668a9ac815196e843da6929ee737a",
      "layout": {
        "solcVersion": "0.8.14",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)3569_storage",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:14"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:17"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:19"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:22"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:24"
          },
          {
            "label": "tokenSupply",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SHNFT",
            "src": "contracts/SHNFT.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3569_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23ce9fcd26c32f3e5f2113e8347fb4a7e5ccef0846666b184013195152746518": {
      "address": "0x9a9edEA6C804F40d81B1Dc4ae551AFfbad2ec5Bb",
      "txHash": "0x4b6365a179b6f49e5e1b92b5ae4b5aca700fc0a315a2539fff41949a713d0023",
      "layout": {
        "solcVersion": "0.8.14",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "products",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:17"
          },
          {
            "label": "getProduct",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:19"
          },
          {
            "label": "isProduct",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "4547d2f37ebbc3a01cf9bcfe1830bbeaa88217a526436db89a4314518959d390": {
      "address": "0xB9d9e972100a1dD01cd441774b45b5821e136043",
      "txHash": "0x4d521b9410cf09abb750e1f4676182505f53d98266b54f18058053135d90434d",
      "layout": {
        "solcVersion": "0.8.14",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "products",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:17"
          },
          {
            "label": "getProduct",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:19"
          },
          {
            "label": "isProduct",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SHFactory",
            "src": "contracts/SHFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    }
  }
}
